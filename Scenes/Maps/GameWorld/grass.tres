[gd_resource type="ShaderMaterial" load_steps=7 format=3 uid="uid://ck0rbmyi4qrry"]

[ext_resource type="Texture2D" uid="uid://c71f0lr8a3bal" path="res://Assets/StylizedGrass003/Stylized_Grass_003_basecolor.jpg" id="1_5hyvi"]
[ext_resource type="Texture2D" uid="uid://c264ytniaoujd" path="res://Assets/StylizedGrass003/Stylized_Grass_003_ambientOcclusion.jpg" id="2_e2yjl"]
[ext_resource type="Texture2D" uid="uid://dw26cadymnqie" path="res://Assets/StylizedGrass003/Stylized_Grass_003_height.png" id="3_07t4e"]
[ext_resource type="Texture2D" uid="uid://cy7033d4dg61p" path="res://Assets/StylizedGrass003/Stylized_Grass_003_normal.jpg" id="4_l7ai2"]
[ext_resource type="Texture2D" uid="uid://bw2rvod8axk26" path="res://Assets/StylizedGrass003/Stylized_Grass_003_roughness.jpg" id="5_1qd3l"]

[sub_resource type="Shader" id="Shader_rbwyt"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.4.1.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_burley, specular_schlick_ggx;

uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color, filter_linear_mipmap, repeat_enable;
uniform ivec2 albedo_texture_size;
uniform float point_size : hint_range(0.1, 128.0, 0.1);

uniform float roughness : hint_range(0.0, 1.0);
uniform sampler2D texture_metallic : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r, filter_linear_mipmap, repeat_enable;

uniform float specular : hint_range(0.0, 1.0, 0.01);
uniform float metallic : hint_range(0.0, 1.0, 0.01);

uniform sampler2D texture_normal : hint_roughness_normal, filter_linear_mipmap, repeat_enable;
uniform float normal_scale : hint_range(-16.0, 16.0);

uniform sampler2D texture_ambient_occlusion : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform vec4 ao_texture_channel;
uniform float ao_light_affect : hint_range(0.0, 1.0, 0.01);

uniform sampler2D texture_heightmap : hint_default_black, filter_linear_mipmap, repeat_enable;
uniform float heightmap_scale : hint_range(-16.0, 16.0, 0.001);
uniform int heightmap_min_layers : hint_range(1, 64);
uniform int heightmap_max_layers : hint_range(1, 64);
uniform vec2 heightmap_flip;

uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

void vertex() {
	UV = UV * uv1_scale.xy + uv1_offset.xy;
}

void fragment() {
	vec2 base_uv = UV;

	{
		// Height: Enabled
		vec3 view_dir = normalize(normalize(-VERTEX + EYE_OFFSET) * mat3(TANGENT * heightmap_flip.x, -BINORMAL * heightmap_flip.y, NORMAL));
		float depth = 1.0 - texture(texture_heightmap, base_uv).r;
		vec2 ofs = base_uv - view_dir.xy * depth * heightmap_scale * 0.01;
		base_uv = ofs;
	}

	vec4 albedo_tex = texture(texture_albedo, base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;

	float metallic_tex = dot(texture(texture_metallic, base_uv), metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	SPECULAR = specular;

	vec4 roughness_texture_channel = vec4(1.0, 0.0, 0.0, 0.0);
	float roughness_tex = dot(texture(texture_roughness, base_uv), roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;

	// Normal Map: Enabled
	NORMAL_MAP = texture(texture_normal, base_uv).rgb;
	NORMAL_MAP_DEPTH = normal_scale;

	// Ambient Occlusion: Enabled
	AO = dot(texture(texture_ambient_occlusion, base_uv), ao_texture_channel);
	AO_LIGHT_AFFECT = ao_light_affect;
}
"

[resource]
render_priority = 0
shader = SubResource("Shader_rbwyt")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/texture_albedo = ExtResource("1_5hyvi")
shader_parameter/albedo_texture_size = Vector2i(1024, 1024)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = Vector4(1, 0, 0, 0)
shader_parameter/texture_roughness = ExtResource("5_1qd3l")
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/texture_normal = ExtResource("4_l7ai2")
shader_parameter/normal_scale = 1.0
shader_parameter/texture_ambient_occlusion = ExtResource("2_e2yjl")
shader_parameter/ao_texture_channel = Vector4(1, 0, 0, 0)
shader_parameter/ao_light_affect = 0.0
shader_parameter/texture_heightmap = ExtResource("3_07t4e")
shader_parameter/heightmap_scale = 5.0
shader_parameter/heightmap_min_layers = 8
shader_parameter/heightmap_max_layers = 32
shader_parameter/heightmap_flip = Vector2(1, 1)
shader_parameter/uv1_scale = Vector3(100, 100, 100)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
